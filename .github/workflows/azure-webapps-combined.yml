name: "Azure React and Storybook Workflow"

on:
  push:
    branches:
      - components
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME_1: dev-react-demo-re01
  AZURE_WEBAPP_NAME_2: dev-react-demo-storybook-re01
  AZURE_WEBAPP_PACKAGE_PATH: "."
  NODE_VERSION: "14.x"

jobs:
  build_react_demo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present       
          npm run test --if-present
        env:
          CI: false

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app-1
          path: ./build

  deploy_react_demo:
    runs-on: ubuntu-latest
    needs: build_react_demo
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp-1.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app-1

      - name: "Deploy to dev-react-demo-re01"
        id: deploy-to-webapp-1
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_1 }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  build_storybook:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: npm install, build-storybook
        run: |
          npm install
          npm run build-storybook
        env:
          CI: false

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app-2
          path: ./storybook-static

  deploy_storybook:
    runs-on: ubuntu-latest
    needs: build_storybook
    environment:
      name: "Production UI Testing"
      url: ${{ steps.deploy-to-webapp-2.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app-2

      - name: "Deploy to dev-react-demo-storybook-re01"
        id: deploy-to-webapp-2
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME_2 }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_STORYBOOK }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  check_urls:
    runs-on: ubuntu-latest
    needs: [deploy_react_demo, deploy_storybook]

    steps:
      - name: URL Health Check React Demo
        uses: Jtalk/url-health-check-action@v2
        with:
          url: http://dev-react-demo-re01.azurewebsites.net/
          max-attempts: 3
          retry-delay: 30s
          follow-redirect: false
          retry-all: false

      - name: URL Health Check Storybook
        uses: Jtalk/url-health-check-action@v2
        with:
          url: http://dev-react-demo-storybook-re01.azurewebsites.net/
          max-attempts: 3
          retry-delay: 30s
          follow-redirect: false
          retry-all: false

  serverless_email_confirmation:
    runs-on: ubuntu-latest
    needs: check_urls

    steps:
      - name: Sending Update Email
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{ "subject": "Update Notification", "to": "${{ secrets.SERVERLESS_SEND_TO }}", "source": "GitHub Actions", "sites": "http://dev-react-demo-re01.azurewebsites.net/,http://dev-react-demo-storybook-re01.azurewebsites.net/" }' ${{ secrets.SERVERLESS_MAILER_ADDRESS }}
